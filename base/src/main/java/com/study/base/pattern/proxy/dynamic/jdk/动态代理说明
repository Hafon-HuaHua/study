JDK动态代理（被代理类必须有实现接口）：
首先在newProxyInstance的时候有3个参数，第一个是ClassLoader(通常是被代理类的ClassLoader)，第二个是被代理类所实现的接口，第三个是代理类的动态
代理动作InvocationHandler。在new动态代理实例的时候会在内存生成一个Proxy类，它会继承Proxy并且实现被代理类实现的接口，在生成的代理类的构造方法中会把
InvocationHandler传过去，Proxy父类中有一个InvocationHandler的对象，通过此处构造赋值super。然后调用生成代理类的方法，因为代理类也实现了被
代理类的接口，所以代理类中也会有一个被代理类的方法实现，实际调用的也是代理类里的方法，代理类的方法内部会调用super中InvocationHandler对象的invoke
方法（就是在定义InvocationHandler时的invoke方法），然后调用被代理对象的方法，在这前后可以添加一些前置和后置动作。